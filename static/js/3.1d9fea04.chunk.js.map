{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","Preloader","className","style","description","userPhoto","src","photos","large","alt","userId","fullName","contacts","instagram","aboutMe","lookingForAJobDescription","Post","item","avatar","message","like","MyPosts","React","memo","postsElements","posts","reverse","map","post","likesCount","id","postsBlock","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","AddNewPostForm","handleSubmit","Field","name","placeholder","component","Textarea","validate","required","reduxForm","form","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,YAAc,iCAAiC,UAAY,iC,oBCAhHD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,KAAO,wB,oBCAlED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB,4KC4CtCC,EA1CgB,SAACC,GAAW,IAAD,EACVC,oBAAS,GADC,mBACnCC,EADmC,KACzBC,EADyB,OAEdF,mBAASD,EAAMI,QAFD,mBAEnCA,EAFmC,KAE3BC,EAF2B,KAIxCC,qBAAY,WACVD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAeV,OACE,iCACIF,GACA,8BACE,sBAAMK,QAjBW,WACvBJ,GAAY,IAgBN,SAAkCH,EAAMI,QAAU,aAGrDF,GACC,8BACE,uBACAM,WAAW,EACXC,OApBmB,WACzBN,GAAY,GACZH,EAAMU,aAAaN,IAmBbO,SAhBe,SAACC,GACtBP,EAAUO,EAAEC,cAAcC,QAgBpBA,MAAOV,UCVFW,EAvBK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASZ,EAA2B,EAA3BA,OAAQM,EAAmB,EAAnBA,aACtC,IAAKM,EACH,OAAO,cAACC,EAAA,EAAD,IAIT,OACE,sBAAKC,UAAWC,IAAMC,YAAtB,UACE,qBACEF,UAAWC,IAAME,UACjBC,IAAKN,EAAQO,OAAOC,MAAQR,EAAQO,OAAOC,MAASR,EAAQO,OAAOC,MALrD,4BAMdC,IAAI,KAEN,cAAC,EAAD,CAAwBrB,OAAQA,EAAQM,aAAcA,IACtD,uCAAUM,EAAQU,UAClB,uDAAWV,EAAQW,YACnB,qFAAgBX,EAAQY,SAASC,aACjC,oEAAcb,EAAQc,WACtB,4FAAkBd,EAAQe,iC,8ECNjBC,EAdF,SAAChC,GACZ,OACE,sBAAKkB,UAAWC,IAAMc,KAAtB,UACE,qBACEf,UAAWC,IAAMe,OACjBZ,IAAI,gKACJG,IAAI,KAELzB,EAAMmC,QACP,yCAAYnC,EAAMoC,YCJlBC,EAAUC,IAAMC,MAAK,SAACvC,GAC1B,IAAIwC,EAAgB,YAAIxC,EAAMyC,OAC3BC,UACAC,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAMT,QAASS,EAAKT,QAAuBC,KAAMQ,EAAKC,YAApBD,EAAKE,OAKxD,OACE,sBAAK5B,UAAWC,IAAM4B,WAAtB,UACE,0CACA,cAAC,EAAD,CAAgBC,SANJ,SAACC,GACfjD,EAAMkD,QAAQD,EAAOE,gBAMnB,qBAAKjC,UAAWC,IAAMsB,MAAtB,SAA8BD,UAK9BY,EAAcC,YAAiB,IAEjCC,EAAiB,SAACtD,GACpB,OACE,uBAAMgD,SAAUhD,EAAMuD,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,KAAM,cACNC,YAAa,kBACbC,UAAWC,IACXC,SAAU,CAACC,IAAUV,OAGzB,8BACE,oDAMRE,EAAiBS,YAAU,CAAEC,KAAM,yBAAlBD,CAA6CT,GAE/CjB,QCzBA4B,EAFUC,aAfD,SAACC,GACvB,MAAO,CACL1B,MAAO0B,EAAMC,YAAY3B,MACzBU,YAAagB,EAAMC,YAAYjB,gBAIR,SAACkB,GAC1B,MAAO,CACLnB,QAAS,SAACC,GACRkB,EAASC,YAAqBnB,QAKXe,CAA6C7B,GCPvDkC,EATC,SAACvE,GACf,OACE,gCACE,cAAC,EAAD,CAAagB,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQM,aAAcV,EAAMU,eAC/E,cAAC,EAAD,QCAA8D,E,uKACJ,WACE,IAAI9C,EAAS+C,KAAKzE,MAAM0E,MAAMC,OAAOjD,OAChCA,IACHA,EAAS+C,KAAKzE,MAAM4E,mBAElBH,KAAKzE,MAAM6E,QAAQC,KAAK,UAI5BL,KAAKzE,MAAM+E,eAAerD,GAC1B+C,KAAKzE,MAAMgF,UAAUtD,K,oBAGvB,WACE,OACE,8BACE,cAAC,EAAD,2BACM+C,KAAKzE,OADX,IAEEgB,QAASyD,KAAKzE,MAAMgB,QACpBZ,OAAQqE,KAAKzE,MAAMI,OACnBM,aAAc+D,KAAKzE,MAAMU,sB,GArBJ4B,IAAM2C,WAmCtBC,sBACbhB,aARoB,SAACC,GAAD,MAAY,CAChCnD,QAASmD,EAAMC,YAAYpD,QAC3BZ,OAAQ+D,EAAMC,YAAYhE,OAC1BwE,iBAAkBT,EAAMgB,KAAKrC,GAC7BsC,OAAQjB,EAAMgB,KAAKC,UAIM,CAAEL,mBAAgBC,cAAWtE,mBACtD2E,IAFaH,CAGbV","file":"static/js/3.1d9fea04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__3qVLk\",\"description\":\"ProfileInfo_description__1LjDC\",\"userPhoto\":\"ProfileInfo_userPhoto__3Wa8c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1bXyz\",\"post\":\"MyPosts_post__1z94I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3LWSe\",\"avatar\":\"Post_avatar__3VC0b\"};","import React, { useEffect, useState } from \"react\";\r\n// import style from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect ( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onClick={activateEditMode}>{props.status || \"------\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input \r\n          autoFocus={true} \r\n          onBlur={deactivateEditMode} \r\n          onChange={onStatusChange} \r\n          value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  let defaultAvatar = \"https://i.pravatar.cc/300\";\r\n  return (\r\n    <div className={style.description}>\r\n      <img\r\n        className={style.userPhoto}\r\n        src={profile.photos.large ? profile.photos.large : (profile.photos.large = defaultAvatar)}\r\n        alt=\"\"\r\n      />\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      <div>ID: {profile.userId}</div>\r\n      <div>Имя: {profile.fullName}</div>\r\n      <div>Контакты: {profile.contacts.instagram}</div>\r\n      <div>О себе: {profile.aboutMe}</div>\r\n      <div>Мои навыки: {profile.lookingForAJobDescription}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <img\r\n        className={style.avatar}\r\n        src=\"https://www.nj.com/resizer/h8MrN0-Nw5dB5FOmMVGMmfVKFJo=/450x0/smart/cloudfront-us-east-1.images.arcpublishing.com/advancelocal/SJGKVE5UNVESVCW7BBOHKQCZVE.jpg\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>Like: {props.like}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((post) => <Post message={post.message} key={post.id} like={post.likesCount} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n      <div className={style.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name={\"newPostText\"}\r\n          placeholder={\"enter your post\"}\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddNewPostForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profileReducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}